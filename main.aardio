import win.ui;
import fsys;
import fsys.dlg;
//import fsys.dlg.dir;
/*DSG{{*/
mainForm = win.form(text="Python2Aardio Conversion Helper";right=959;bottom=591;maximize=1)
mainForm.add(
btnBrowseDir={cls="button";text="文件夹...";left=524;top=27;right=593;bottom=51;aw=1;dt=1;tabstop=1;z=13};
btnBrowseFile={cls="button";text="单个文件...";left=449;top=27;right=518;bottom=51;aw=1;dt=1;tabstop=1;z=3};
btnStart={cls="button";text="转换";left=637;top=35;right=715;bottom=59;dr=1;dt=1;tabstop=1;z=7};
cbAddSemicolon={cls="checkbox";text="行尾加分号";left=727;top=11;right=814;bottom=25;checked=1;dr=1;tabstop=1;z=14};
cbCamelize={cls="checkbox";text="驼峰式命名";left=819;top=11;right=906;bottom=25;checked=1;dr=1;tabstop=1;z=15};
cbSubDir={cls="checkbox";text="包含子目录";left=637;top=11;right=724;bottom=25;checked=1;dr=1;tabstop=1;z=10};
edtPath={cls="edit";text="D:\Documents\My Projects\Aardio\py2aardio\test\strategy.py";left=76;top=28;right=442;bottom=52;acceptfiles=1;aw=1;dl=1;dt=1;edge=1;multiline=1;tabstop=1;z=2};
edtSource={cls="edit";left=14;top=275;right=483;bottom=573;ah=1;aw=1;db=1;dl=1;edge=1;hscroll=1;multiline=1;vscroll=1;z=6};
edtTarget={cls="edit";left=500;top=275;right=945;bottom=574;ah=1;aw=1;db=1;dr=1;edge=1;hscroll=1;multiline=1;vscroll=1;z=9};
groupbox={cls="groupbox";text="选择文件路径";left=7;top=3;right=614;bottom=64;aw=1;dl=1;dr=1;dt=1;edge=1;z=1};
groupbox2={cls="groupbox";text="原始文件";left=7;top=72;right=490;bottom=578;ah=1;aw=1;db=1;dl=1;dt=1;edge=1;z=5};
groupbox3={cls="groupbox";text="目标文件";left=494;top=71;right=949;bottom=578;ah=1;aw=1;db=1;dr=1;dt=1;edge=1;z=8};
lbSource={cls="listbox";left=15;top=94;right=483;bottom=273;acceptfiles=1;ah=1;aw=1;dl=1;dt=1;edge=1;hscroll=1;items={};msel=1;vscroll=1;z=11};
lbTarget={cls="listbox";left=500;top=94;right=944;bottom=273;ah=1;aw=1;dr=1;dt=1;edge=1;hscroll=1;items={};msel=1;vscroll=1;z=12};
static={cls="static";text="文件路径：";left=15;top=35;right=82;bottom=51;dl=1;dt=1;tabstop=1;transparent=1;z=4}
)
/*}}*/

import core.converter;
import thread.command;
mainForm.browseType = 'file';

// 转换单个文件
var convertSingleFile = function(filename, cfg) {
    if(filename){
		//assert( string.load( filename ) );
		var src = string.load( filename );
		if(#src) {
			mainForm.edtSource.text = src;
        	mainForm.edtPath.text = filename;
         	
   			mainForm.edtPath.color = 0;
   			mainForm.edtPath.redraw();
   			
   			mainForm.edtSource.color = 0;
   			mainForm.edtSource.redraw();
   			var cvter = ..core.converter(src, cfg);
   			var tag = fsys.getFileName(filename);
   			var result, err = cvter.go(tag);
   			if(result) {
   				mainForm.edtTarget.text = result;
   			} else {
   				mainForm.edtTarget.text = '转换错误:\n' ++ err;
   			}
   		}
    }
};

//@thread function
var convertFn = function(dir, filename, fullpath, cfg) {
    import core.converter;
    import console;
    import thread.command;
    if(filename){
		var src = string.load( fullpath );
		if(#src) {
   			var cvter = core.converter(src, cfg);
   			var code, err = cvter.go(filename);
   			if(code) {
   				var targetName = filename;
   				var p = ..string.lastIndexAny(targetName, ".");	//将文件扩展名 ".py" 转换成 ".aardio"
				if(p) {
					targetName = ..string.left(targetName, p) + "aardio";	//点号"."已包含
				} else {
					targetName = targetName + ".aardio";
				}
   				var fullpath2 = dir + targetName;
   				var result = string.save(fullpath2, code);
   				thread.command.send('addTargetItem', 'file', fullpath2);
   			} else {
   				console.log("conversion error:" ++ err ++ ",file="++fullpath);
   			}
   		} else {
   			console.log("conversion error: Empty source file: "++fullpath);
   		}
    }
};

var listener = thread.command();
listener.addSourceItem = function(browseType, item) {
    mainForm.lbSource.add(item);
};

listener.addTargetItem = function(browseType, item) {
    mainForm.lbTarget.add(item);
};

mainForm.btnBrowseFile.oncommand = function(id,event){
    var filename = fsys.dlg.open( "Python文件|*.py|所有文件|*.*||", "选择要转换的Python源文件"); 
	if(filename) {
		mainForm.browseType = 'file';
		mainForm.edtPath.text = filename;
	}
}

mainForm.btnBrowseDir.oncommand = function(id,event){
	var path = fsys.dlg.opendir(, mainForm);
	if(path){
		mainForm.browseType = 'dir';
		mainForm.edtPath.text = path;	
	}
}

mainForm.btnStart.oncommand = function(id,event){
    var path = mainForm.edtPath.text;
    mainForm.lbSource.clear();
    mainForm.lbTarget.clear();
    var cfg = {
        addSemicolon = mainForm.cbAddSemicolon.checked == 1;
        camelize = mainForm.cbCamelize.checked == 1;
    };
    
	if(mainForm.browseType == 'file') {
		thread.command.send('addSourceItem', 'file', path);
		convertSingleFile(path, cfg);
		thread.command.send('addTargetItem', 'file', path);
	} elseif(mainForm.browseType == 'dir') {
		var count = 0;
		//批量处理文件
		fsys.enum(path/*要遍历的目录*/, "*.py"/*指定查询文件名,支持windows掩码*/,
			function(dir,filename,fullpath,findData){ //指定触发器
				count++;
				if(filename){//若是文件
					//console.log("文件："++filename, ', dir='++dir, ',fullpath='++fullpath);
           			thread.command.send('addSourceItem', 'file', fullpath);
           			thread.invoke(convertFn, dir, filename, fullpath, cfg);
				}
				/* else {	//是目录
					//console.log("目录：", dir)
					thread.command.send('addSourceItem', 'dir', dir);
				}
				*/
			}, mainForm.cbSubDir.checked==1/*是否递归子目录*/
		);//fsys.enum 
		if(count == 0) {
			mainForm.msgWarn('未发现有效的 python 文件');
		}
	}
}

import console;
mainForm.edtSource.wndproc = function(hwnd,message,wParam,lParam){
	select(message) {
		case 0x115/*_WM_VSCROLL*/ {
			//TODO: 转换成相对百分比%
			var event, pos = ::LOWORD(wParam), ::HIWORD(wParam);
        	//console.debug('edtSource.vscroll msg: event='++tostring(event, 16)++', pos='++tostring(pos,16));
			//var min,max,page = scrollbar.getRange();
			mainForm.edtTarget.sendMessage(message, wParam, lParam);
		}
		case 0x114/*_WM_HSCROLL*/ {
			//console.debug('edtSource.hscroll to', tostring(wParam,16) , tostring(lParam,16));
			mainForm.edtTarget.sendMessage(message, wParam, lParam);
		}
	}
	//无返回值则继续调用默认回调函数
}

mainForm.show();
return win.loopMessage();